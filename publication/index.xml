<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Publications on Xunyun Liu - PhD Candidate</title>
    <link>https://xunyunliu.github.io/publication/</link>
    <description>Recent content in Publications on Xunyun Liu - PhD Candidate</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Xunyun Liu</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://xunyunliu.github.io/publication/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Stepwise Auto-Profiling Method for Performance Optimization of Streaming Applications</title>
      <link>https://xunyunliu.github.io/publication/profiling/</link>
      <pubDate>Fri, 28 Jul 2017 15:19:31 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/profiling/</guid>
      <description>Abstract
Data stream management systems (DSMSs) are scalable, highly available, and fault-tolerant systems that aggregate and analyze real-time data in motion. To continuously perform analytics on the fly within the stream, state-of-the-art DSMSs host streaming applications as a set of inter-connected operators, with each operator encapsulating the semantic of a specific operation. For parallel execution on a particular platform, these operators need to be appropriately replicated in multiple instances that split and process the workload simultaneously.</description>
    </item>
    
    <item>
      <title>Performance-Oriented Deployment of Streaming Applications on Cloud</title>
      <link>https://xunyunliu.github.io/publication/performance/</link>
      <pubDate>Sat, 10 Jun 2017 20:19:18 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/performance/</guid>
      <description>Abstract
Performance of streaming applications are significantly impacted by the deployment decisions made at infrastructure level, i.e., number and configuration of resources allocated for each functional unit of the application. The current deployment practices are mostly platform-oriented, meaning that the deployment configuration is tuned to a static resource-set environment and thus is inflexible to use in cloud with an on-demand resource pool. In this paper, we propose P-Deployer, a deployment framework that enables streaming applications to run on IaaS clouds with satisfactory performance and minimal resource consumption.</description>
    </item>
    
    <item>
      <title>E-Storm: Replication-based State Management in Distributed Stream Processing Systems</title>
      <link>https://xunyunliu.github.io/publication/replicationft/</link>
      <pubDate>Thu, 25 May 2017 16:55:29 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/replicationft/</guid>
      <description>Abstract
Apache Storm is a fault-tolerant, distributed in-memory computation system for processing large volumes of high-velocity data in real-time. As an integral part of the fault-tolerance mechanism, Storm&amp;rsquo;s state management is achieved by a checkpointing framework, which commits states regularly and recovers lost states from the latest checkpoint. However, this method involves a remote data store for state preservation and access, resulting in significant overheads to the performance of error-free execution.</description>
    </item>
    
    <item>
      <title>D-Storm: Dynamic Resource-Efficient Scheduling of Stream Processing Applications</title>
      <link>https://xunyunliu.github.io/publication/icpads/</link>
      <pubDate>Fri, 05 May 2017 11:50:31 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/icpads/</guid>
      <description>Abstract
Scheduling streaming applications in Data Stream Management Systems (DSMS) has been investigated for years. However, there lacks an intelligent system that is capable of monitoring application execution, modelling its resource usages, and then adjusting the scheduling plan under different sizes of inputs without requiring users&amp;rsquo; intervention. In this paper, we model the scheduling problem as a bin-packing variant and propose a heuristic-based algorithm to solve it with minimised inter-node communication.</description>
    </item>
    
    <item>
      <title>Stream Processing in IoT: Foundations, State-of-the-Art, and Future Directions</title>
      <link>https://xunyunliu.github.io/publication/streamiot/</link>
      <pubDate>Wed, 25 May 2016 20:02:04 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/streamiot/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Message Logging Protocol Based on User Level Failure Mitigation</title>
      <link>https://xunyunliu.github.io/publication/ulml/</link>
      <pubDate>Sat, 25 May 2013 19:32:04 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/ulml/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Design and Implementation of a Novel Message Logging Protocol for OpenFOAM</title>
      <link>https://xunyunliu.github.io/publication/openfoam/</link>
      <pubDate>Fri, 25 Jan 2013 19:51:25 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/openfoam/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Design and Implementation of a Tool for Automatic Similarity Compile Analysis</title>
      <link>https://xunyunliu.github.io/publication/acachinese/</link>
      <pubDate>Sat, 25 Aug 2012 19:38:29 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/acachinese/</guid>
      <description>This paper is written in Chinese.</description>
    </item>
    
  </channel>
</rss>