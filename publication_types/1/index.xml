<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1 on Xunyun Liu - PhD Candidate</title>
    <link>https://xunyunliu.github.io/publication_types/1/</link>
    <description>Recent content in 1 on Xunyun Liu - PhD Candidate</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2017 Xunyun Liu</copyright>
    <lastBuildDate>Thu, 25 May 2017 16:55:29 +1000</lastBuildDate>
    
	<atom:link href="https://xunyunliu.github.io/publication_types/1/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>E-Storm: Replication-based State Management in Distributed Stream Processing Systems</title>
      <link>https://xunyunliu.github.io/publication/replicationft/</link>
      <pubDate>Thu, 25 May 2017 16:55:29 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/replicationft/</guid>
      <description>Abstract
Apache Storm is a fault-tolerant, distributed in-memory computation system for processing large volumes of high-velocity data in real-time. As an integral part of the fault-tolerance mechanism, Storm&amp;rsquo;s state management is achieved by a checkpointing framework, which commits states regularly and recovers lost states from the latest checkpoint. However, this method involves a remote data store for state preservation and access, resulting in significant overheads to the performance of error-free execution.</description>
    </item>
    
    <item>
      <title>D-Storm: Dynamic Resource-Efficient Scheduling of Stream Processing Applications</title>
      <link>https://xunyunliu.github.io/publication/icpads/</link>
      <pubDate>Fri, 05 May 2017 11:50:31 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/icpads/</guid>
      <description>Abstract
Scheduling streaming applications in Data Stream Management Systems (DSMS) has been investigated for years. However, there lacks an intelligent system that is capable of monitoring application execution, modelling its resource usages, and then adjusting the scheduling plan under different sizes of inputs without requiring users&amp;rsquo; intervention. In this paper, we model the scheduling problem as a bin-packing variant and propose a heuristic-based algorithm to solve it with minimised inter-node communication.</description>
    </item>
    
    <item>
      <title>A Message Logging Protocol Based on User Level Failure Mitigation</title>
      <link>https://xunyunliu.github.io/publication/ulml/</link>
      <pubDate>Sat, 25 May 2013 19:32:04 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/ulml/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Design and Implementation of a Novel Message Logging Protocol for OpenFOAM</title>
      <link>https://xunyunliu.github.io/publication/openfoam/</link>
      <pubDate>Fri, 25 Jan 2013 19:51:25 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/openfoam/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Design and Implementation of a Tool for Automatic Similarity Compile Analysis</title>
      <link>https://xunyunliu.github.io/publication/acachinese/</link>
      <pubDate>Sat, 25 Aug 2012 19:38:29 +1000</pubDate>
      
      <guid>https://xunyunliu.github.io/publication/acachinese/</guid>
      <description>This paper is written in Chinese.</description>
    </item>
    
  </channel>
</rss>